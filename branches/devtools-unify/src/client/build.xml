<project name="speedtracer-client" default="build">
  <!-- Default values are overridden by ../build.xml -->
  <property name="config" value="Release" />
  <!-- client.pem - can be set to a location for a key for the 
         graphical extension.  -->
  <!-- headless.pem - can be set to a location for a key for the 
         headless extension. -->
  <property name="speedtracer.destdir" location="../${config}" />
  <property name="speedtracer.revision" value="0" />
  <property name="moniker" value="speedtracer" />
  <property name="headless.moniker" value="speedtracerheadless" />
  <property name="speedtracer.ui.destdir" 
      location="${speedtracer.destdir}/${moniker}" />
  <property name="speedtracer.headless.destdir" 
      location="../${config}/${headless.moniker}" />


  <macrodef name="try-chrome-path">
    <attribute name="path" />
    <sequential>
      <condition property="chrome.path" value="@{path}">
        <available file="@{path}" />
      </condition>
    </sequential>
  </macrodef>

  <!-- Try to find Chrome -->
  <property environment="env" />
  <try-chrome-path path="/opt/google/chrome/chrome" />
  <try-chrome-path path="/Applications/Google Chrome.app/Contents/MacOS/Google Chrome" />
  <try-chrome-path path="${env.USERPROFILE}/AppData/Local/Google/Chrome/Application/chrome.exe" />
  <try-chrome-path path="${env.USERPROFILE}/Local Settings/Application Data/Google/Chrome/Application/chrome.exe" />
  <try-chrome-path path="C:/Program Files (x86)/Google/Chrome/Application/chrome.exe" />
  <try-chrome-path path="C:/Program Files/Google/Chrome/Application/chrome.exe" />

  <target name="extension.package">
    <!-- Chrome does not have good error checking for missing pem
      files, so we make sure we fail if you specify a key file that
      isn't available -->
    <condition property="speedtracer.client.pem.valid">
      <or>
        <available file="${speedtracer.client.pem.path}" />
        <not>
          <isset property="client.pem" />
        </not>
      </or>
    </condition>
    <fail message="Extension Pem file is invalid: ${speedtracer.client.pem.path}"
        unless="speedtracer.client.pem.valid" />

    <condition property="speedtracer.client.pem.options"
        value="--pack-extension-key=${speedtracer.client.pem.path}"
        else="">
      <isset property="client.pem" />
    </condition>  

    <exec executable="${chrome.path}">
      <!-- user-data-dir is required to make sure an existing
           chrome instance does not interfere.  -->
      <arg line="--pack-extension=${speedtracer.ui.destdir}
                 --no-message-box
                 --user-data-dir=${speedtracer.destdir}/obj/user-data-dir
                 --no-first-run
                 ${speedtracer.client.pem.options}" />
    </exec>

    <!-- Check to ensure that a crx was actually produced. -->
    <condition property="speedtracer.client.success">
      <available file="${speedtracer.destdir}/${moniker}.crx" />
    </condition>
    <fail message="${moniker}.crx was not produced."
        unless="speedtracer.client.success" />

    <!-- Also produce a zip file that can be used to update the gallery. -->
    <zip basedir="${speedtracer.ui.destdir}"
        destfile="${speedtracer.destdir}/${moniker}.zip" /> 
    </target>
  

  <target name="headless.extension.build">
    <ant dir="ui" target="headless.extension.build" />
  </target>

    <target name="headless.extension.package">
    <!-- TODO(zundel): I'd like to not copy code around, but I am not 
         sure how to macro-ize the logic below so it can be shared with
         the graphical extension.  -->
    <condition property="speedtracer.headless.pem.valid">
      <or>
        <available file="${speedtracer.headless.pem.path}" />
        <not>
          <isset property="headless.pem" />
        </not>
      </or>
    </condition>
    <fail message="Headless Extension Pem file is invalid: ${speedtracer.headless.pem.path}"
        unless="speedtracer.headless.pem.valid" />

    <condition property="speedtracer.headless.pem.options"
        value="--pack-extension-key=${speedtracer.headless.pem.path}"
        else="">
      <isset property="headless.pem" />
    </condition>
    
    <exec executable="${chrome.path}">
      <!-- user-data-dir is required to make sure an existing
           chrome instance does not interfere.  -->
      <arg line="--pack-extension=${speedtracer.headless.destdir}
                 --no-message-box
                 --user-data-dir=${speedtracer.destdir}/obj/user-data-dir
                 --no-first-run
                 ${speedtracer.headless.pem.options}" />
    </exec>

    <!-- Check to ensure that a crx was actually produced. -->
    <condition property="speedtracer.headless.success">
      <available file="${speedtracer.destdir}/${headless.moniker}.crx" />
    </condition>
    <fail message="${headless.moniker}.crx was not produced."
        unless="speedtracer.headless.success" />

    <!-- Also produce a zip file that can be used to update the gallery. -->
    <zip basedir="${speedtracer.headless.destdir}"
        destfile="${speedtracer.destdir}/${headless.moniker}.zip" /> 
  </target>

  <target name="ui.build">
    <ant dir="ui" target="build" />
  </target>

  <target name="speedtracer.extension.build" >
    <ant dir="ui" target="speedtracer.ui.build" />
    <ant dir="ui" target="extension.build" />
  </target>

  <!-- Top Level Targets-->
  <target name="build" 
          depends="ui.build,extension.package,headless.extension.package" />

  <target name="speedtracer.build"
    depends="speedtracer.extension.build,extension.package" >
  </target>

  <target name="speedtracer.headless.build"
          depends="headless.extension.build,
                   headless.extension.package">
  </target>

  <target name="test">
    <ant dir="ui" target="test" />
  </target>

  <target name="speedtracer.breaky.build">
    <ant dir="ui" target="breaky.build" />
  </target>
</project>
